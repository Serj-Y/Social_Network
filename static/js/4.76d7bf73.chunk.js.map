{"version":3,"sources":["Chat/ChatPage.module.scss","Chat/ChatMessage/AddMessageForm.module.scss","Chat/ChatMessage/Message/Message.module.scss","Chat/ChatMessage/Messages.module.scss","Chat/ChatMessage/AddMessageForm.tsx","Chat/ChatMessage/Message/Message.tsx","Chat/ChatMessage/Messages.tsx","Chat/Chat.tsx","Chat/ChatPage.tsx"],"names":["module","exports","AddMessageForm","_useState","useState","_useState2","_slicedToArray","message","setMessage","dispatch","useDispatch","status","useSelector","state","chat","React","createElement","className","styles","messageForm","onChange","e","currentTarget","value","Btn","Disabled","Click","sendMessage","ButtonText","Message","memo","_ref","messageContainer","namePhotoContainer","userPhoto","src","photo","DefaultPhoto","alt","userName","Messages","messages","messagesAnchorRef","useRef","isAutoScroll","setIsAutoScroll","useEffect","_messagesAnchorRef$cu","current","scrollIntoView","behavior","messagesContainer","onScroll","element","Math","abs","scrollHeight","scrollTop","clientHeight","map","m","index","key","id","ref","Chat","startMessagesListening","stopMessagesListening","ChatPage","chatPageContainer"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,kBAAoB,sC,oBCAtCD,EAAOC,QAAU,CAAC,YAAc,sC,oBCAhCD,EAAOC,QAAU,CAAC,iBAAmB,kCAAkC,mBAAqB,oCAAoC,UAAY,2BAA2B,SAAW,4B,oBCAlLD,EAAOC,QAAU,CAAC,kBAAoB,sC,+HCMzBC,EAA2B,WACpC,IAAAC,EAA8BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GACpBI,EAAWC,cAEXC,EAASC,aAAY,SAACC,GAAmB,OAAKA,EAAMC,KAAKH,UAU/D,OACII,IAAAC,cAAA,OAAKC,UAAWC,IAAOC,aACnBJ,IAAAC,cAAA,YAAUI,SAAU,SAACC,GAAC,OAAKb,EAAWa,EAAEC,cAAcC,QAAQA,MAAOhB,IACrEQ,IAAAC,cAACQ,IAAG,CAACC,SAAqB,UAAXd,EAAoBe,MAAO,WAVzCnB,IAGLE,EAASkB,YAAYpB,IACrBC,EAAW,MAM+DoB,WAAY,W,oCCXjFC,EAAkDd,IAAMe,MAAK,SAAAC,GAAkB,IAAfxB,EAAOwB,EAAPxB,QACzE,OACIQ,IAAAC,cAAA,OAAKC,UAAWC,IAAOc,kBACnBjB,IAAAC,cAAA,OAAKC,UAAWC,IAAOe,oBACnBlB,IAAAC,cAAA,OAAKC,UAAWC,IAAOgB,UAAWC,IAAK5B,EAAQ6B,OAASC,IAAcC,IAAI,cAC1EvB,IAAAC,cAAA,OAAKC,UAAWC,IAAOqB,UAClBhC,EAAQgC,WAGjBxB,IAAAC,cAAA,OAAKC,UAAWC,IAAOX,SACjBA,EAAQA,a,kBCjBbiC,EAAqB,WAC9B,IAAMC,EAAW7B,aAAY,SAACC,GAAmB,OAAKA,EAAMC,KAAK2B,YAC3DC,EAAoBC,iBAAuB,MACjDxC,EAAwCC,oBAAS,GAAKC,EAAAC,YAAAH,EAAA,GAA/CyC,EAAYvC,EAAA,GAAEwC,EAAexC,EAAA,GAkBpC,OANAyC,qBAAU,WACa,IAADC,EAAdH,IACyB,QAAzBG,EAAAL,EAAkBM,eAAO,IAAAD,GAAzBA,EAA2BE,eAAe,CAAEC,SAAU,cAG3D,CAACT,IAEA1B,IAAAC,cAAA,OAAKC,UAAWC,IAAOiC,kBAAmBC,SAjBtB,SAAC/B,GAErB,IAAMgC,EAAUhC,EAAEC,cACdgC,KAAKC,IAAKF,EAAQG,aAAeH,EAAQI,UAAaJ,EAAQK,cAAgB,KAC7Ed,GAAgBC,GAAgB,GAEjCD,GAAgBC,GAAgB,KAY/BJ,EAASkB,KAAI,SAACC,EAAGC,GAAK,OAAK9C,IAAAC,cAACa,EAAO,CAACiC,IAAKF,EAAEG,GAAIxD,QAASqD,OACzD7C,IAAAC,cAAA,OAAKgD,IAAKtB,MCvBTuB,EAAiB,WAC1B,IAAMxD,EAAWC,cAWjB,OARAoC,qBAAU,WAGN,OAFArC,EAASyD,eAEF,WACHzD,EAAS0D,kBAEd,IAGCpD,IAAAC,cAAA,WACID,IAAAC,cAACwB,EAAQ,MACTzB,IAAAC,cAACd,EAAc,QCLZkE,UATE,WACb,OACIrD,IAAAC,cAAA,OAAKC,UAAWC,IAAOmD,mBACnBtD,IAAAC,cAACiD,EAAI","file":"static/js/4.76d7bf73.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatPageContainer\":\"ChatPage_chatPageContainer__1YtlF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageForm\":\"AddMessageForm_messageForm__1umVg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageContainer\":\"Message_messageContainer__gcVnz\",\"namePhotoContainer\":\"Message_namePhotoContainer__kOvG1\",\"userPhoto\":\"Message_userPhoto__3vqZZ\",\"userName\":\"Message_userName__3t_VG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesContainer\":\"Messages_messagesContainer__19Iwq\"};","import React, { useState } from \"react\";\nimport { Btn } from \"../../Common/Components/styles/button/Button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { sendMessage } from \"../../Common/Components/Redux/chatReducer\";\nimport styles from \"./AddMessageForm.module.scss\"\nimport { AppStateType } from \"../../Common/Components/Redux/reduxStore\";\n\nexport const AddMessageForm: React.FC = () => {\n    const [message, setMessage] = useState(\"\")\n    const dispatch = useDispatch()\n\n    const status = useSelector((state: AppStateType) => state.chat.status)\n\n    const sendMessageHandler = () => {\n        if (!message) {\n            return;\n        }\n        dispatch(sendMessage(message))\n        setMessage(\"\")\n    }\n\n    return (\n        <div className={styles.messageForm} >\n            <textarea onChange={(e) => setMessage(e.currentTarget.value)} value={message} ></textarea>\n            <Btn Disabled={status !== \"ready\"} Click={() => sendMessageHandler()} ButtonText={\"Send\"} />\n        </div>\n    );\n};\n","import React from \"react\";\nimport DefaultPhoto from \"../../../Common//assets/img/DefaultPhoto.png\"\nimport styles from \"./Message.module.scss\"\n\nexport type ChatMessageType = {\n    message: string;\n    userName: string;\n    photo: string | undefined;\n    userId: number\n\n}\n\n\nexport const Message: React.FC<{ message: ChatMessageType }> = React.memo(({ message }) => {\n    return (\n        <div className={styles.messageContainer}>\n            <div className={styles.namePhotoContainer} >\n                <img className={styles.userPhoto} src={message.photo || DefaultPhoto} alt=\"userPhoto\" />\n                <div className={styles.userName} >\n                    {message.userName}\n                </div>\n            </div>\n            <div className={styles.message} >\n                { message.message}\n            </div>\n        </div>\n    );\n});\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Message } from \"./Message/Message\";\nimport { useSelector } from \"react-redux\";\nimport { AppStateType } from \"../../Common/Components/Redux/reduxStore\";\nimport styles from \"./Messages.module.scss\"\n\nexport const Messages: React.FC = () => {\n    const messages = useSelector((state: AppStateType) => state.chat.messages)\n    const messagesAnchorRef = useRef<HTMLDivElement>(null)\n    const [isAutoScroll, setIsAutoScroll] = useState(true)\n\n    const onScrollHandler = (e: React.UIEvent<HTMLDivElement, UIEvent>) => {\n\n        const element = e.currentTarget\n        if (Math.abs((element.scrollHeight - element.scrollTop) - element.clientHeight) < 300) {\n            !isAutoScroll && setIsAutoScroll(true)\n        } else {\n            isAutoScroll && setIsAutoScroll(false)\n        }\n    }\n\n    useEffect(() => {\n        if (isAutoScroll) {\n            messagesAnchorRef.current?.scrollIntoView({ behavior: \"smooth\" })\n        }\n\n    }, [messages])\n    return (\n        <div className={styles.messagesContainer} onScroll={onScrollHandler}  >\n            {messages.map((m, index) => <Message key={m.id} message={m} />)}\n            <div ref={messagesAnchorRef} />\n        </div>\n    );\n};\n","import React, { useEffect } from \"react\";\nimport { AddMessageForm } from \"./ChatMessage/AddMessageForm\";\nimport { Messages } from \"./ChatMessage/Messages\";\nimport { useDispatch } from \"react-redux\";\nimport { startMessagesListening, stopMessagesListening } from \"../Common/Components/Redux/chatReducer\";\n\n\nexport const Chat: React.FC = () => {\n    const dispatch = useDispatch()\n\n\n    useEffect(() => {\n        dispatch(startMessagesListening())\n\n        return () => {\n            dispatch(stopMessagesListening())\n        }\n    }, [])\n\n    return (\n        <div>\n            <Messages />\n            <AddMessageForm />\n        </div>\n    );\n};\n","import React from \"react\";\nimport styles from \"./ChatPage.module.scss\"\nimport { Chat } from \"./Chat\";\n\ntype PropsType = {\n\n}\n\nconst ChatPage = () => {\n    return (\n        <div className={styles.chatPageContainer}>\n            <Chat />\n        </div>\n    )\n}\n\n\nexport default ChatPage"],"sourceRoot":""}